Add color engine support

diff --git a/res/values/colors.xml b/res/values/colors.xml
index 0004220..8512fe3 100644
--- a/res/values/colors.xml
+++ b/res/values/colors.xml
@@ -54,4 +54,9 @@
 
     <color name="dialer_dialpad_touch_tint">#330288d1</color>
     <color name="floating_action_button_touch_tint">#80ffffff</color>
+
+    <!-- Color engine -->
+    <color name="pixel_primary_color">#242424</color>
+    <color name="pixel_secondary_color">#3a3a3a</color>
+
 </resources>
diff --git a/res/values/styles.xml b/res/values/styles.xml
index 0104220..8512fe3 100644
--- a/res/values/styles.xml
+++ b/res/values/styles.xml
@@ -290,4 +290,11 @@
         <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
         <item name="android:singleLine">true</item>
     </style>
+
+    <style name="settings_pixel_theme">
+        <item name="android:colorPrimary">@color/pixel_primary_color</item>
+        <item name="android:colorPrimaryDark">@color/pixel_primary_color</item>
+        <item name="android:colorSecondary">@color/pixel_secondary_color</item>
+    </style>
+
 </resources>
diff --git a/src/com/android/phone/MobileNetworkSettings.java b/src/com/android/phone/MobileNetworkSettings.java
index 008c683..5ead30b 100644
--- a/src/com/android/phone/MobileNetworkSettings.java
+++ b/src/com/android/phone/MobileNetworkSettings.java
@@ -31,6 +31,8 @@
 
 import android.app.ActionBar;
 import android.app.AlertDialog;
+import android.app.IThemeCallback;
+import android.app.ThemeManager;
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -41,6 +43,7 @@
 import android.os.AsyncResult;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.os.Message;
 import android.os.PersistableBundle;
 import android.os.SystemProperties;
@@ -52,6 +55,7 @@
 import android.preference.PreferenceScreen;
 import android.preference.SwitchPreference;
 import android.provider.Settings;
+import android.provider.Settings.Secure;
 import android.telephony.CarrierConfigManager;
 import android.telephony.PhoneStateListener;
 import android.telephony.SubscriptionInfo;
@@ -141,6 +145,9 @@
     private boolean mIsGlobalCdma;
     private boolean mUnavailable;
 
+    private int mTheme;
+    private ThemeManager mThemeManager;
+
     private final PhoneStateListener mPhoneStateListener = new PhoneStateListener() {
         /*
          * Enable/disable the 'Enhanced 4G LTE Mode' when in/out of a call
@@ -451,6 +458,20 @@ private TabSpec buildTabSpec(String tag, String title) {
 
     @Override
     protected void onCreate(Bundle icicle) {
+        final int themeMode = Secure.getInt(getContentResolver(),
+                Secure.THEME_PRIMARY_COLOR, 0);
+        final int accentColor = Secure.getInt(getContentResolver(),
+                Secure.THEME_ACCENT_COLOR, 0);
+        mThemeManager = (ThemeManager) getSystemService(Context.THEME_SERVICE);
+        if (mThemeManager != null) {
+            mThemeManager.addCallback(mThemeCallback);
+        }
+        if (themeMode != 0 || accentColor != 0) {
+            getTheme().applyStyle(mTheme, true);
+        }
+        if (themeMode == 2) {
+            getTheme().applyStyle(R.style.settings_pixel_theme, true);
+        }
         if (DBG) log("onCreate:+");
         super.onCreate(icicle);
 
@@ -503,6 +524,22 @@ protected void onCreate(Bundle icicle) {
         if (DBG) log("onCreate:-");
     }
 
+    private final IThemeCallback mThemeCallback = new IThemeCallback.Stub() {
+
+        @Override
+        public void onThemeChanged(int themeMode, int color) {
+            onCallbackAdded(themeMode, color);
+            MobileNetworkSettings.this.runOnUiThread(() -> {
+                MobileNetworkSettings.this.recreate();
+            });
+        }
+
+        @Override
+        public void onCallbackAdded(int themeMode, int color) {
+            mTheme = color;
+        }
+    };
+
     @Override
     protected void onDestroy() {
         super.onDestroy();
diff --git a/src/com/android/phone/NetworkSetting.java b/src/com/android/phone/NetworkSetting.java
index 018c683..5ead30b 100644
--- a/src/com/android/phone/NetworkSetting.java
+++ b/src/com/android/phone/NetworkSetting.java
@@ -18,7 +18,9 @@
 
 import android.app.ActionBar;
 import android.app.Dialog;
+import android.app.IThemeCallback;
 import android.app.ProgressDialog;
+import android.app.ThemeManager;
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -27,6 +29,7 @@
 import android.os.AsyncResult;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.os.IBinder;
 import android.os.Message;
 import android.os.RemoteException;
@@ -35,6 +38,7 @@
 import android.preference.PreferenceActivity;
 import android.preference.PreferenceGroup;
 import android.preference.PreferenceScreen;
+import android.provider.Settings.Secure;
 import android.telephony.ServiceState;
 import android.telephony.TelephonyManager;
 import android.text.TextUtils;
@@ -95,6 +99,9 @@
     //Menu Item(s)
     private MenuItem mSearchButton;
 
+    private int mTheme;
+    private ThemeManager mThemeManager;
+
     private final Handler mHandler = new Handler() {
         @Override
         public void handleMessage(Message msg) {
@@ -247,6 +254,20 @@ public String getNormalizedCarrierName(OperatorInfo ni) {
 
     @Override
     protected void onCreate(Bundle icicle) {
+        final int themeMode = Secure.getInt(getContentResolver(),
+                Secure.THEME_PRIMARY_COLOR, 0);
+        final int accentColor = Secure.getInt(getContentResolver(),
+                Secure.THEME_ACCENT_COLOR, 0);
+        mThemeManager = (ThemeManager) getSystemService(Context.THEME_SERVICE);
+        if (mThemeManager != null) {
+            mThemeManager.addCallback(mThemeCallback);
+        }
+        if (themeMode != 0 || accentColor != 0) {
+            getTheme().applyStyle(mTheme, true);
+        }
+        if (themeMode == 2) {
+            getTheme().applyStyle(R.style.settings_pixel_theme, true);
+        }
         super.onCreate(icicle);
 
         mUm = (UserManager) getSystemService(Context.USER_SERVICE);
@@ -292,6 +313,22 @@ protected void onCreate(Bundle icicle) {
         displayEmptyNetworkList();
     }
 
+    private final IThemeCallback mThemeCallback = new IThemeCallback.Stub() {
+
+        @Override
+        public void onThemeChanged(int themeMode, int color) {
+            onCallbackAdded(themeMode, color);
+            NetworkSetting.this.runOnUiThread(() -> {
+                NetworkSetting.this.recreate();
+            });
+        }
+
+        @Override
+        public void onCallbackAdded(int themeMode, int color) {
+            mTheme = color;
+        }
+    };
+
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu items for use in the action bar
