Subject: [PATCH  fix color engine.

diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java b/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java
index 662b6a74aed..62d24ecc56a 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSDetail.java
@@ -18,6 +18,7 @@
 import android.animation.Animator.AnimatorListener;
 import android.animation.AnimatorListenerAdapter;
 import android.annotation.Nullable;
+import android.app.ThemeManager;
 import android.content.Context;
 import android.content.Intent;
 import android.content.res.Configuration;
@@ -97,7 +98,9 @@ protected void onFinishInflate() {
         mQsDetailHeaderTitle = (TextView) mQsDetailHeader.findViewById(android.R.id.title);
         mQsDetailHeaderSwitch = (Switch) mQsDetailHeader.findViewById(android.R.id.toggle);
         mQsDetailHeaderProgress = (ImageView) findViewById(R.id.qs_detail_header_progress);
-        mQsDetailHeaderProgress.setBackgroundColor(Utils.getColorAccent(mContext));
+        if (!ThemeManager.isOverlayEnabled()) {
+            mQsDetailHeaderProgress.setBackgroundColor(Utils.getColorAccent(mContext));
+        }
 
         updateDetailText();
 
diff --git a/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java b/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java
index 77da6d4c7b2..04f57109e5a 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java
@@ -74,7 +74,8 @@
     private QSContainer mQsContainer;
 
     public QSCustomizer(Context context, AttributeSet attrs) {
-        super(new ContextThemeWrapper(context, Utils.getColorAccent(context)), attrs);
+        super(new ContextThemeWrapper(context, ThemeManager.isOverlayEnabled()
+                ? R.style.edit_theme : Utils.getColorAccent(context)), attrs);
         mClipper = new QSDetailClipper(this);
 
         LayoutInflater.from(getContext()).inflate(R.layout.qs_customize_panel_content, this);
diff --git a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java
index 10be65f9dfa..9dd28e0ff18 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java
@@ -22,6 +22,7 @@
 import android.annotation.SuppressLint;
 import android.app.Dialog;
 import android.app.KeyguardManager;
+import android.app.ThemeManager;
 import android.content.Context;
 import android.content.pm.PackageManager;
 import android.content.res.ColorStateList;
@@ -123,6 +124,7 @@
     private final Accessibility mAccessibility = new Accessibility();
     private ColorStateList mActiveSliderTint;
     private ColorStateList mInactiveSliderTint;
+    private ColorStateList mInactiveSliderTintColorEngine;
     private VolumeDialogMotion mMotion;
     private final int mWindowType;
     private final ZenModeController mZenModeController;
@@ -159,7 +161,8 @@ public VolumeDialog(Context context, int windowType, VolumeDialogController cont
         mAccessibilityMgr =
                 (AccessibilityManager) mContext.getSystemService(Context.ACCESSIBILITY_SERVICE);
         mActiveSliderTint = ColorStateList.valueOf(Utils.getColorAccent(mContext));
-        mInactiveSliderTint = ColorStateList.valueOf(Utils.getColorAccent(mContext));
+        mInactiveSliderTint = loadColorStateList(R.color.volume_slider_inactive);
+        mInactiveSliderTintColorEngine = ColorStateList.valueOf(Utils.getColorAccent(mContext));
 
         initDialog();
 
@@ -278,7 +281,7 @@ protected void updateDialog() {
         mDialog.dismiss();
         mDialogView.setBackgroundColor(ta.getColor(0, 0));
         mActiveSliderTint = ColorStateList.valueOf(Utils.getColorAccent(mContext));
-        mInactiveSliderTint = ColorStateList.valueOf(Utils.getColorAccent(mContext));
+        mInactiveSliderTintColorEngine = ColorStateList.valueOf(Utils.getColorAccent(mContext));
         endText.setTextColor(ta.getColor(1, 0));
         ta.recycle();
     }
@@ -886,7 +889,9 @@ private void updateVolumeRowSliderTintH(VolumeRow row, boolean isActive) {
             row.slider.requestFocus();
         }
         final ColorStateList tint = isActive && row.slider.isEnabled() ? mActiveSliderTint
-                : mInactiveSliderTint;
+                : (ThemeManager.isOverlayEnabled()
+                        ? mInactiveSliderTint
+                        : mInactiveSliderTintColorEngine);
         if (tint == row.cachedSliderTint) return;
         row.cachedSliderTint = tint;
         row.slider.setProgressTintList(tint);
diff --git a/services/core/java/com/android/server/policy/GlobalActions.java b/services/core/java/com/android/server/policy/GlobalActions.java
index c096cddd9af..0f759720497 100644
--- a/services/core/java/com/android/server/policy/GlobalActions.java
+++ b/services/core/java/com/android/server/policy/GlobalActions.java
@@ -324,7 +324,9 @@ public static Context getContext(Context context) {
                 Settings.Secure.THEME_ACCENT_COLOR, 0);
 
         if (themeMode == 0 && accentColor == 0) {
-            context.setTheme(R.style.Theme_DeviceDefault_Light_Dialog_Alert);
+            // Don't apply any style, use the one that the context already has
+            // to keep default behaviour
+            //context.setTheme(R.style.Theme_DeviceDefault_Light_Dialog_Alert);
         } else {
             context.getTheme().applyStyle(sTheme, true);
         }
diff --git a/services/core/java/com/android/server/policy/GlobalActions.java b/services/core/java/com/android/server/policy/GlobalActions.java
index c096cddd9af..0f759720497 100644
--- a/services/core/java/com/android/server/policy/GlobalActions.java
+++ b/services/core/java/com/android/server/policy/GlobalActions.java
@@ -82,6 +82,7 @@
 import android.util.ArraySet;
 import android.util.Log;
 import android.util.TypedValue;
+import android.view.ContextThemeWrapper;
 import android.view.InputDevice;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
@@ -324,14 +325,12 @@ public static Context getContext(Context context) {
                 Settings.Secure.THEME_ACCENT_COLOR, 0);
 
         if (themeMode == 0 && accentColor == 0) {
-            // Don't apply any style, use the one that the context already has
-            // to keep default behaviour
-            //context.setTheme(R.style.Theme_DeviceDefault_Light_Dialog_Alert);
+            // Keep original theme
+            return context;
         } else {
-            context.getTheme().applyStyle(sTheme, true);
+            // Use our color engine theme
+            return new ContextThemeWrapper(context, sTheme);
         }
-
-        return context;
     }
 
     /**
@@ -1011,7 +1010,9 @@ public long getItemId(int position) {
 
         public View getView(int position, View convertView, ViewGroup parent) {
             Action action = getItem(position);
-            return action.create(getContext(mContext), convertView, parent, LayoutInflater.from(mContext));
+            Context inflateContext = getContext(mContext);
+            return action.create(inflateContext, convertView, parent,
+                    LayoutInflater.from(inflateContext));
         }
     }
 
