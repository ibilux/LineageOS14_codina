diff --git a/res/xml/device_info_settings.xml b/res/xml/device_info_settings.xml
index 153f35f..bb89d10 100644
--- a/res/xml/device_info_settings.xml
+++ b/res/xml/device_info_settings.xml
@@ -45,6 +45,11 @@
                     android:targetClass="org.lineageos.updater.UpdatesActivity" />
         </cyanogenmod.preference.SelfRemovingPreference>
 
+        <!-- Changelog -->
+        <PreferenceScreen android:key="changelog"
+                android:title="@string/changelog_crdroid_title"
+                android:fragment="com.android.settings.cyanogenmod.Changelog" />
+
         <!-- Device status - launches activity -->
         <PreferenceScreen android:key="status_info"
                 android:title="@string/device_status"
diff --git a/res/values/cr_strings.xml b/res/values/cr_strings.xml
new file mode 100644
index 153f35f..bb89d10
--- /dev/null
+++ b/res/values/cr_strings.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2012-2015 SergeyL Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+
+    <!-- Changelog -->
+    <string name="changelog_crdroid_title">Changelog</string>
+    <string name="changelog_crdroid_error">Unable to load changelog</string>
+
+</resources>
diff --git a/src/com/android/settings/cyanogenmod/Changelog.java b/src/com/android/settings/cyanogenmod/Changelog.java
new file mode 100644
index 153f35f..bb89d10
--- /dev/null
+++ b/src/com/android/settings/cyanogenmod/Changelog.java
@@ -0,0 +1,72 @@
+/*
+ * Copyright (C) 2015 crDroid Android
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.cyanogenmod;
+
+import android.app.Fragment;
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ScrollView;
+import android.widget.TextView;
+
+import com.android.settings.R;
+
+import java.io.FileReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+
+public class Changelog extends Fragment {
+
+    private static final String CHANGELOG_PATH = "/system/etc/Changelog.txt";
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                Bundle savedInstanceState) {
+        InputStreamReader inputReader = null;
+        String text = null;
+
+        try {
+            StringBuilder data = new StringBuilder();
+            char tmp[] = new char[2048];
+            int numRead;
+
+            inputReader = new FileReader(CHANGELOG_PATH);
+            while ((numRead = inputReader.read(tmp)) >= 0) {
+                data.append(tmp, 0, numRead);
+            }
+            text = data.toString();
+        } catch (IOException e) {
+            text = getString(R.string.changelog_crdroid_error);
+        } finally {
+            try {
+                if (inputReader != null) {
+                    inputReader.close();
+                }
+            } catch (IOException e) {
+            }
+        }
+
+        final TextView textView = new TextView(getActivity());
+        textView.setText(text);
+
+        final ScrollView scrollView = new ScrollView(getActivity());
+        scrollView.addView(textView);
+
+        return scrollView;
+    }
+}
diff --git a/src/com/android/settings/cyanogenmod/Changelog.java b/src/com/android/settings/cyanogenmod/Changelog.java
index 0005526..00ec120 100644
--- a/src/com/android/settings/cyanogenmod/Changelog.java
+++ b/src/com/android/settings/cyanogenmod/Changelog.java
@@ -18,6 +18,13 @@
 
 import android.app.Fragment;
 import android.os.Bundle;
+import android.graphics.Color;
+import android.graphics.Typeface;
+import android.text.Spannable;
+import android.text.SpannableStringBuilder;
+import android.text.style.ForegroundColorSpan;
+import android.text.style.StyleSpan;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -29,6 +36,8 @@
 import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
+import java.util.regex.Pattern;
+import java.util.regex.Matcher;
 
 public class Changelog extends Fragment {
 
@@ -39,9 +48,11 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 Bundle savedInstanceState) {
         InputStreamReader inputReader = null;
         String text = null;
-
+        StringBuilder data = new StringBuilder();
+        Pattern p = Pattern.compile("([a-f0-9]{7})\\s\\s(.*)\\s\\s\\[(.*)\\]"); //(?dms)
+        Pattern p2 = Pattern.compile("\\s+\\*\\s(([\\w_\\-]+/)+)");
+        Pattern p3 = Pattern.compile("(\\d\\d\\-\\d\\d\\-\\d{4})");
         try {
-            StringBuilder data = new StringBuilder();
             char tmp[] = new char[2048];
             int numRead;
 
@@ -49,9 +60,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             while ((numRead = inputReader.read(tmp)) >= 0) {
                 data.append(tmp, 0, numRead);
             }
-            text = data.toString();
+//            text = data.toString();
         } catch (IOException e) {
-            text = getString(R.string.changelog_crdroid_error);
+//            text = getString(R.string.changelog_crdroid_error);
         } finally {
             try {
                 if (inputReader != null) {
@@ -61,8 +72,24 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             }
         }
 
+        SpannableStringBuilder sb = new SpannableStringBuilder(data);
+        Matcher m = p.matcher(data);
+        while (m.find()){
+          sb.setSpan(new ForegroundColorSpan(Color.rgb(96,125,139)),m.start(1), m.end(1), Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+          sb.setSpan(new StyleSpan(Typeface.BOLD),m.start(1),m.end(1),Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+          sb.setSpan(new ForegroundColorSpan(Color.rgb(69,90,100)),m.start(3), m.end(3), Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+        }
+        m = p2.matcher(data);
+        while (m.find()){
+          sb.setSpan(new StyleSpan(Typeface.BOLD),m.start(1), m.end(1), Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+          sb.setSpan(new ForegroundColorSpan(Color.rgb(33,39,43)),m.start(1),m.end(1),Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+        }
+        m = p3.matcher(data);
+        while (m.find()){
+          sb.setSpan(new StyleSpan(Typeface.BOLD+Typeface.ITALIC),m.start(1), m.end(1), Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+        }
         final TextView textView = new TextView(getActivity());
-        textView.setText(text);
+        textView.setText(sb);
 
         final ScrollView scrollView = new ScrollView(getActivity());
         scrollView.addView(textView);
diff --git a/src/com/android/settings/Settings.java b/src/com/android/settings/Settings.java
index 29b8198..0d1291b 100644
--- a/src/com/android/settings/Settings.java
+++ b/src/com/android/settings/Settings.java
@@ -47,6 +47,7 @@
     public static class PhysicalKeyboardActivity extends SettingsActivity { /* empty */ }
     public static class InputMethodAndSubtypeEnablerActivity extends SettingsActivity { /* empty */ }
     public static class SpellCheckersSettingsActivity extends SettingsActivity { /* empty */ }
+    public static class Changelog extends SettingsActivity { /* empty */ }
     public static class LocalePickerActivity extends SettingsActivity { /* empty */ }
     public static class UserDictionarySettingsActivity extends SettingsActivity { /* empty */ }
     public static class HomeSettingsActivity extends SettingsActivity { /* empty */ }
diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 29b8198..0d1291b 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -184,6 +184,8 @@
             </intent-filter>
         </activity>
 
+        <activity android:name=".cyanogenmod.Changelog" />
+
         <!-- Wireless Controls -->
 
         <activity android:name="Settings$WirelessSettingsActivity"
diff --git a/src/com/android/settings/cyanogenmod/Changelog.java b/src/com/android/settings/cyanogenmod/Changelog.java
index 0005526..00e0120 100644
--- a/src/com/android/settings/cyanogenmod/Changelog.java
+++ b/src/com/android/settings/cyanogenmod/Changelog.java
@@ -32,14 +32,22 @@
 import android.widget.TextView;
 
 import com.android.settings.R;
+import com.android.settings.SettingsPreferenceFragment;
 
 import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.util.regex.Pattern;
 import java.util.regex.Matcher;
 
-public class Changelog extends Fragment {
+import com.android.internal.logging.MetricsProto.MetricsEvent;
+
+public class Changelog extends SettingsPreferenceFragment {
+
+    @Override
+    protected int getMetricsCategory() {
+        return MetricsEvent.APPLICATION;
+    }
 
     private static final String CHANGELOG_PATH = "/system/etc/Changelog.txt";
 
