Subject: [PATCH] Data tile behavior: make it customizable by the user [1/2]
 if advanced tile enabled: one tap to switch on/off data, long press to show
 details view if disabled: stock behavior, one tap for details view and long
 press for Cellular settings

Subject: [PATCH] Change logic of Cellurar Tile.
 - works in small tiles mode 
 - settings in Detail mode open Mobile Settings

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index f6fe9d97059..04cc4944189 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -6237,6 +6237,12 @@ public static boolean putFloatForUser(ContentResolver cr, String name, float val
          */
         public static final String QS_WIFI_EASY_TOGGLE = "qs_wifi_easy_toggle";
 
+        /**
+         * Whether to use one tap tile action to enable or disable data 
+         * @hide
+         */
+        public static final String QS_DATA_ADVANCED = "qs_data_advanced";
+
         /**
          * Whether the device should doze if configured.
          * @hide
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
index b34e881c170..b99a5f5634b 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
@@ -81,11 +81,39 @@ public QSIconView createTileView(Context context) {
 
     @Override
     public Intent getLongClickIntent() {
-        return CELLULAR_SETTINGS;
+        return null;
     }
 
     @Override
     protected void handleClick() {
+        MetricsLogger.action(mContext, getMetricsCategory());
+        if (mDataController.isMobileDataSupported()) {
+            if(mController.isAdvancedDataTileEnabled()) {
+                mDataController.setMobileDataEnabled(!mDataController.isMobileDataEnabled());
+            } else {
+                showDetail(true);
+            }
+        } else {
+            mHost.startActivityDismissingKeyguard(CELLULAR_SETTINGS);
+        }
+    }
+
+    @Override
+    protected void handleLongClick() {
+        MetricsLogger.action(mContext, getMetricsCategory());
+        if(mController.isAdvancedDataTileEnabled()) {
+            if (mDataController.isMobileDataSupported()) {
+            showDetail(true);
+            } else {
+                mHost.startActivityDismissingKeyguard(CELLULAR_SETTINGS);
+            }
+        } else {
+            mHost.startActivityDismissingKeyguard(CELLULAR_SETTINGS);
+        }
+    }
+
+    @Override
+    protected void handleSecondaryClick() {
         MetricsLogger.action(mContext, getMetricsCategory());
         if (mDataController.isMobileDataSupported()) {
             showDetail(true);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java
index ad5f24b8f36..39d53f6df90 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java
@@ -27,6 +27,7 @@
 public interface NetworkController {
 
     boolean hasMobileDataFeature();
+    boolean isAdvancedDataTileEnabled();
     void addSignalCallback(SignalCallback cb);
     void removeSignalCallback(SignalCallback cb);
     void setWifiEnabled(boolean enabled);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
index d68bbb9e972..6d995b774d5 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
@@ -16,7 +16,9 @@
 
 package com.android.systemui.statusbar.policy;
 
+import android.app.ActivityManager;
 import android.content.BroadcastReceiver;
+import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
@@ -884,4 +886,12 @@ static Config readConfig(Context context) {
             return config;
         }
     }
+
+    /**
+     * Check the advanced data tile setting
+     */
+    public boolean isAdvancedDataTileEnabled() {
+        return Settings.Secure.getIntForUser(mContext.getContentResolver(),
+                Settings.Secure.QS_DATA_ADVANCED, 0, ActivityManager.getCurrentUser()) == 1;
+    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
index b99a5f5634b..61a94f86415 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
@@ -41,6 +41,9 @@
 public class CellularTile extends QSTile<QSTile.SignalState> {
     static final Intent CELLULAR_SETTINGS = new Intent().setComponent(new ComponentName(
             "com.android.settings", "com.android.settings.Settings$DataUsageSummaryActivity"));
+    private static final Intent MOBILE_NETWORK_SETTINGS = new Intent(Intent.ACTION_MAIN)
+            .setComponent(new ComponentName("com.android.phone",
+                    "com.android.phone.MobileNetworkSettings"));
 
     private final NetworkController mController;
     private final DataUsageController mDataController;
@@ -89,7 +92,12 @@ protected void handleClick() {
         MetricsLogger.action(mContext, getMetricsCategory());
         if (mDataController.isMobileDataSupported()) {
             if(mController.isAdvancedDataTileEnabled()) {
-                mDataController.setMobileDataEnabled(!mDataController.isMobileDataEnabled());
+                boolean enabled = mDataController.isMobileDataEnabled();
+                if (!enabled) {
+                   mDataController.setMobileDataEnabled(true);
+                } else {
+                   mDataController.setMobileDataEnabled(false);
+                }
             } else {
                 showDetail(true);
             }
@@ -112,16 +120,6 @@ protected void handleLongClick() {
         }
     }
 
-    @Override
-    protected void handleSecondaryClick() {
-        MetricsLogger.action(mContext, getMetricsCategory());
-        if (mDataController.isMobileDataSupported()) {
-            showDetail(true);
-        } else {
-            mHost.startActivityDismissingKeyguard(CELLULAR_SETTINGS);
-        }
-    }
-
     @Override
     public CharSequence getTileLabel() {
         return mContext.getString(R.string.quick_settings_cellular_detail_title);
@@ -288,7 +286,7 @@ public Boolean getToggleState() {
 
         @Override
         public Intent getSettingsIntent() {
-            return CELLULAR_SETTINGS;
+            return MOBILE_NETWORK_SETTINGS;
         }
 
         @Override
