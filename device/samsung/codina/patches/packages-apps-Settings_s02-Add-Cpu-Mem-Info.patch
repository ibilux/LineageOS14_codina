Add Cpu & Mem Info 

diff --git a/res/values/cr_strings.xml b/res/values/cr_strings.xml
index 1110070..2889013 100644
--- a/res/values/cr_strings.xml
+++ b/res/values/cr_strings.xml
@@ -24,4 +24,8 @@
     <string name="su_indicator_summary_on">Superuser indicator is visible when a session is active</string>
     <string name="su_indicator_summary_off">Toggle to show superuser indicator when a session is active</string>
 
+    <!-- About device screen, CPU and RAM info. -->
+    <string name="cpu_info">CPU</string>
+    <string name="mem_info">RAM</string>
+
 </resources>
diff --git a/res/xml/device_info_settings.xml b/res/xml/device_info_settings.xml
index 1110070..2889014 100644
--- a/res/xml/device_info_settings.xml
+++ b/res/xml/device_info_settings.xml
@@ -182,6 +182,18 @@
                 settings:allowDividerAbove="true"
                 settings:allowDividerBelow="true"/>
 
+        <!-- Device cpu info -->
+        <Preference android:key="device_cpu"
+                style="?android:preferenceInformationStyle"
+                android:title="@string/cpu_info"
+                android:summary="@string/device_info_default"/>
+
+        <!-- Device mem info -->
+        <Preference android:key="device_memory"
+                style="?android:preferenceInformationStyle"
+                android:title="@string/mem_info"
+                android:summary="@string/device_info_default"/>
+
         <!-- Build date -->
         <com.android.settings.DividerPreference
                 android:key="build_date"
diff --git a/src/com/android/settings/DeviceInfoSettings.java b/src/com/android/settings/DeviceInfoSettings.java
index 1110070..2889015 100644
--- a/src/com/android/settings/DeviceInfoSettings.java
+++ b/src/com/android/settings/DeviceInfoSettings.java
@@ -46,6 +46,11 @@
 import com.android.internal.os.RegionalizationEnvironment;
 import com.android.internal.os.IRegionalizationService;
 
+import java.io.FileReader;
+import java.io.IOException;
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
@@ -83,6 +88,10 @@
     private static final String KEY_MOD_VERSION = "mod_version";
     private static final String KEY_MOD_BUILD_DATE = "build_date";
     private static final String KEY_MOD_API_LEVEL = "mod_api_level";
+    private static final String FILENAME_PROC_MEMINFO = "/proc/meminfo";
+    private static final String FILENAME_PROC_CPUINFO = "/proc/cpuinfo";
+    private static final String KEY_DEVICE_CPU = "device_cpu";
+    private static final String KEY_DEVICE_MEMORY = "device_memory";
 
     static final int TAPS_TO_BE_A_DEVELOPER = 7;
 
@@ -168,6 +177,21 @@ public void onCreate(Bundle icicle) {
         removePreferenceIfPropertyMissing(getPreferenceScreen(), KEY_SELINUX_STATUS,
                 PROPERTY_SELINUX_STATUS);
 
+        String cpuInfo = getCPUInfo();
+        String memInfo = getMemInfo();
+
+        if (cpuInfo != null) {
+            setStringSummary(KEY_DEVICE_CPU, cpuInfo);
+        } else {
+            getPreferenceScreen().removePreference(findPreference(KEY_DEVICE_CPU));
+        }
+
+        if (memInfo != null) {
+            setStringSummary(KEY_DEVICE_MEMORY, memInfo);
+        } else {
+            getPreferenceScreen().removePreference(findPreference(KEY_DEVICE_MEMORY));
+        }
+
         // Remove Safety information preference if PROPERTY_URL_SAFETYLEGAL is not set
         removePreferenceIfPropertyMissing(getPreferenceScreen(), KEY_SAFETY_LEGAL,
                 PROPERTY_URL_SAFETYLEGAL);
@@ -563,4 +587,59 @@ private boolean isPropertyMissing(String property) {
             }
         };
 
+	private String getMemInfo() {
+            String result = null;
+            BufferedReader reader = null;
+
+            try {
+                /* /proc/meminfo entries follow this format:
+                 * MemTotal:         362096 kB
+                 * MemFree:           29144 kB
+                 * Buffers:            5236 kB
+                 * Cached:            81652 kB
+                 */
+                String firstLine = readLine(FILENAME_PROC_MEMINFO);
+                if (firstLine != null) {
+                    String parts[] = firstLine.split("\\s+");
+                    if (parts.length == 3) {
+                        result = Long.parseLong(parts[1])/1024 + " MB";
+                    }
+                }
+            } catch (IOException e) {}
+
+            return result;
+        }
+
+        private String getCPUInfo() {
+            String result = null;
+
+            try {
+                /* The expected /proc/cpuinfo output is as follows:
+                 * Processor    : ARMv7 Processor rev 2 (v7l)
+                 * BogoMIPS    : 272.62
+                 */
+                String firstLine = readLine(FILENAME_PROC_CPUINFO);
+                if (firstLine != null) {
+                    result = firstLine.split(":")[1].trim();
+                }
+            } catch (IOException e) {}
+
+            return result;
+        }
+
+    /**
+     * Reads a line from the specified file.
+     * @param filename the file to read from
+     * @return the first line, if any.
+     * @throws IOException if the file couldn't be read
+     */
+    private static String readLine(String filename) throws IOException {
+        BufferedReader reader = new BufferedReader(new FileReader(filename), 256);
+        try {
+            return reader.readLine();
+        } finally {
+            reader.close();
+        }
+    }
+
 }
