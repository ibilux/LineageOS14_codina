media: Allow using legacy HSR calculation
 from MR2 is incompatible with pre-MR2 Qualcomm camera binaries.
 Any device with said binaries before needs to opt in to
 LEGACY_HSR to have working High Speed Recording (slow motion video).
BOARD_GLOBAL_CFLAGS += -DLEGACY_HSR

diff --git a/include/media/stagefright/AudioSource.h b/include/media/stagefright/AudioSource.h
index 6b88404..00a7286 100644
--- a/include/media/stagefright/AudioSource.h
+++ b/include/media/stagefright/AudioSource.h
@@ -86,6 +86,9 @@ struct AudioSource : public MediaSource, public MediaBufferObserver {
     int64_t mStartTimeUs;
     int16_t mMaxAmplitude;
     int64_t mPrevSampleTimeUs;
+#ifdef LEGACY_HSR
+    int64_t mFirstSampleTimeUs;
+#endif
     int64_t mInitialReadTimeUs;
     int64_t mNumFramesReceived;
     int64_t mNumClientOwnedBuffers;
diff --git a/media/libstagefright/AudioSource.cpp b/media/libstagefright/AudioSource.cpp
index 0957778..012a2ae 100644
--- a/media/libstagefright/AudioSource.cpp
+++ b/media/libstagefright/AudioSource.cpp
@@ -60,6 +60,9 @@ AudioSource::AudioSource(
       mStartTimeUs(0),
       mMaxAmplitude(0),
       mPrevSampleTimeUs(0),
+#ifdef LEGACY_HSR
+      mFirstSampleTimeUs(-1ll),
+#endif
       mInitialReadTimeUs(0),
       mNumFramesReceived(0),
       mNumClientOwnedBuffers(0) {
@@ -277,8 +280,17 @@ status_t AudioSource::read(
     }
 
     if (mSampleRate != mOutSampleRate) {
+#ifndef LEGACY_HSR
             timeUs *= (int64_t)mSampleRate / (int64_t)mOutSampleRate;
             buffer->meta_data()->setInt64(kKeyTime, timeUs);
+#else
+        if (mFirstSampleTimeUs < 0) {
+            mFirstSampleTimeUs = timeUs;
+        }
+        timeUs = mFirstSampleTimeUs + (timeUs - mFirstSampleTimeUs)
+                * (int64_t)mSampleRate / (int64_t)mOutSampleRate;
+        buffer->meta_data()->setInt64(kKeyTime, timeUs);
+#endif
     }
 
     *out = buffer;
diff --git a/media/libstagefright/omx/GraphicBufferSource.cpp b/media/libstagefright/omx/GraphicBufferSource.cpp
index 0957778..022a2ae 100644
--- a/media/libstagefright/omx/GraphicBufferSource.cpp
+++ b/media/libstagefright/omx/GraphicBufferSource.cpp
@@ -805,8 +805,12 @@ int64_t GraphicBufferSource::getTimestamp(const BufferItem &item) {
         if (mPrevCaptureUs < 0ll) {
             // first capture
             mPrevCaptureUs = timeUs;
+#ifndef LEGACY_HSR
             // adjust the first sample timestamp.
             mPrevFrameUs = (timeUs * mTimePerFrameUs) / mTimePerCaptureUs;
+#else
+            mPrevFrameUs = timeUs;
+#endif
         } else {
             // snap to nearest capture point
             int64_t nFrames = (timeUs + mTimePerCaptureUs / 2 - mPrevCaptureUs)
