Subject: [PATCH] Prevent stopped Loaders from starting during configuration change. 
Allow the LoaderManager to be retained when already stopped.

diff --git a/fragment/java/android/support/v4/app/FragmentActivity.java b/fragment/java/android/support/v4/app/FragmentActivity.java
index 78e5370..d2e9578 100644
--- a/fragment/java/android/support/v4/app/FragmentActivity.java
+++ b/fragment/java/android/support/v4/app/FragmentActivity.java
@@ -796,10 +796,7 @@
         } else if (retaining) {
             // We're already really stopped, but we've been asked to retain.
             // Our fragments are taken care of but we need to mark the loaders for retention.
-            // In order to do this correctly we need to restart the loaders first before
-            // handing them off to the next activity.
-            mFragments.doLoaderStart();
-            mFragments.doLoaderStop(true);
+            mFragments.doLoaderRetain();
         }
     }
 
diff --git a/fragment/java/android/support/v4/app/FragmentHostCallback.java b/fragment/java/android/support/v4/app/FragmentHostCallback.java
index fa51ccd..e017d1f 100644
--- a/fragment/java/android/support/v4/app/FragmentHostCallback.java
+++ b/fragment/java/android/support/v4/app/FragmentHostCallback.java
@@ -271,6 +271,8 @@
     }
 
     void doLoaderRetain() {
+        mRetainLoaders = true;
+
         if (mLoaderManager == null) {
             return;
         }
@@ -314,8 +316,7 @@
     SimpleArrayMap<String, LoaderManager> retainLoaderNonConfig() {
         boolean retainLoaders = false;
         if (mAllLoaderManagers != null) {
-            // Restart any loader managers that were already stopped so that they
-            // will be ready to retain
+            // Retain any loader manager, including those that were already stopped
             final int N = mAllLoaderManagers.size();
             LoaderManagerImpl loaders[] = new LoaderManagerImpl[N];
             for (int i=N-1; i>=0; i--) {
@@ -325,9 +326,6 @@
             for (int i=0; i<N; i++) {
                 LoaderManagerImpl lm = loaders[i];
                 if (!lm.mRetaining && doRetainLoaders) {
-                    if (!lm.mStarted) {
-                        lm.doStart();
-                    }
                     lm.doRetain();
                 }
                 if (lm.mRetaining) {
diff --git a/fragment/java/android/support/v4/app/LoaderManager.java b/fragment/java/android/support/v4/app/LoaderManager.java
index 72718ae..d9f990e 100644
--- a/fragment/java/android/support/v4/app/LoaderManager.java
+++ b/fragment/java/android/support/v4/app/LoaderManager.java
@@ -788,12 +788,6 @@
 
     void doRetain() {
         if (DEBUG) Log.v(TAG, "Retaining in " + this);
-        if (!mStarted) {
-            RuntimeException e = new RuntimeException("here");
-            e.fillInStackTrace();
-            Log.w(TAG, "Called doRetain when not started: " + this, e);
-            return;
-        }
 
         mRetaining = true;
         mStarted = false;
