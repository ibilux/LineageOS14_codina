Subject: [PATCH] QS: BT easy toggle [2/2]
Subject: [PATCH] QS BT easy toggle: if enabled, long press for detail view

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 04cc4944189..6e63f15f446 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -6243,6 +6243,12 @@ public static boolean putFloatForUser(ContentResolver cr, String name, float val
          */
         public static final String QS_DATA_ADVANCED = "qs_data_advanced";
 
+        /**
+         * Enable single click to turn Bluetooth on or off.
+         * @hide
+         */
+        public static final String QS_BT_EASY_TOGGLE = "qs_bt_easy_toggle";
+
         /**
          * Whether the device should doze if configured.
          * @hide
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
index d1ff20c7809..9bdd50a624d 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
@@ -20,6 +20,7 @@
 import android.bluetooth.BluetoothDevice;
 import android.bluetooth.BluetoothProfile;
 import android.content.Context;
+import android.content.ContentResolver;
 import android.content.Intent;
 import android.provider.Settings;
 import android.text.TextUtils;
@@ -87,14 +88,21 @@ public Intent getLongClickIntent() {
 
     @Override
     protected void handleClick() {
-        if (!mController.canConfigBluetooth()) {
-            mHost.startActivityDismissingKeyguard(new Intent(Settings.ACTION_BLUETOOTH_SETTINGS));
-            return;
-        }
-        showDetail(true);
-        if (!mState.value) {
-            mState.value = true;
-            mController.setBluetoothEnabled(true);
+        boolean easyToggle = isBtEasyToggleEnabled();
+        if (easyToggle) {
+            final boolean isEnabled = (Boolean)mState.value;
+            MetricsLogger.action(mContext, getMetricsCategory(), !isEnabled);
+            mController.setBluetoothEnabled(!isEnabled);
+        } else {
+            if (!mController.canConfigBluetooth()) {
+	          mHost.startActivityDismissingKeyguard(new Intent(Settings.ACTION_BLUETOOTH_SETTINGS));
+	          return;
+            }
+            if (!mState.value) {
+	          mState.value = true;
+	          mController.setBluetoothEnabled(true);
+            }
+            showDetail(true);
         }
     }
 
@@ -161,6 +169,11 @@ protected void handleUpdateState(BooleanState state, Object arg) {
         state.minimalAccessibilityClassName = Switch.class.getName();
     }
 
+    public boolean isBtEasyToggleEnabled() {
+        return Settings.Secure.getInt(mContext.getContentResolver(),
+            Settings.Secure.QS_BT_EASY_TOGGLE, 0) == 1;
+    }
+
     @Override
     public int getMetricsCategory() {
         return MetricsEvent.QS_BLUETOOTH;
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
index 9bdd50a624d..c931730c5f3 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
@@ -83,7 +83,21 @@ protected void handleSecondaryClick() {
 
     @Override
     public Intent getLongClickIntent() {
-        return new Intent(Settings.ACTION_BLUETOOTH_SETTINGS);
+        return null;
+    }
+
+    @Override
+    protected void handleLongClick() {
+        boolean easyToggle = isBtEasyToggleEnabled();
+        if (easyToggle) {
+            if (!mController.canConfigBluetooth()) {
+                mHost.startActivityDismissingKeyguard(new Intent(Settings.ACTION_BLUETOOTH_SETTINGS));
+            } else {
+                showDetail(true);
+            }
+        } else {
+            mHost.startActivityDismissingKeyguard(new Intent(Settings.ACTION_BLUETOOTH_SETTINGS));
+        }
     }
 
     @Override
