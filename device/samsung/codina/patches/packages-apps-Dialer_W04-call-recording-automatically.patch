Subject: [PATCH] Dialer: call recording automatically

diff --git a/InCallUI/src/com/android/incallui/CallButtonFragment.java b/InCallUI/src/com/android/incallui/CallButtonFragment.java
index 9601ac20d..715d5a3fc 100644
--- a/InCallUI/src/com/android/incallui/CallButtonFragment.java
+++ b/InCallUI/src/com/android/incallui/CallButtonFragment.java
@@ -153,10 +153,20 @@
     private boolean mIsEnabled;
     private MaterialPalette mCurrentThemeColors;
 
+    private static CallButtonPresenter sCallButtonPresenter;
+
+    public static synchronized CallButtonPresenter getInstance() {
+        if (sCallButtonPresenter == null) {
+            sCallButtonPresenter = new CallButtonPresenter();
+        }
+        return sCallButtonPresenter;
+    }
+
     @Override
     public CallButtonPresenter createPresenter() {
         // TODO: find a cleaner way to include audio mode provider than having a singleton instance.
-        return new CallButtonPresenter();
+        sCallButtonPresenter = new CallButtonPresenter();
+        return sCallButtonPresenter;
     }
 
     @Override
diff --git a/InCallUI/src/com/android/incallui/CallCardPresenter.java b/InCallUI/src/com/android/incallui/CallCardPresenter.java
index 8742f98e8..1b1a87d12 100644
--- a/InCallUI/src/com/android/incallui/CallCardPresenter.java
+++ b/InCallUI/src/com/android/incallui/CallCardPresenter.java
@@ -27,6 +27,7 @@
 import android.media.AudioManager;
 import android.net.Uri;
 import android.os.Bundle;
+import android.os.Handler;
 import android.provider.Settings;
 import android.support.annotation.Nullable;
 import android.telecom.Call.Details;
@@ -105,6 +106,7 @@
     private boolean mHasShownToast = false;
     private InCallContactInteractions mInCallContactInteractions;
     private boolean mIsFullscreen = false;
+    private boolean mIsRecording = false;
 
     public static class ContactLookupCallback implements ContactInfoCacheCallback {
         private final WeakReference<CallCardPresenter> mCallCardPresenter;
@@ -332,15 +334,33 @@ public void onStateChange(InCallState oldState, InCallState newState, CallList c
             maybeClearSessionModificationState(mSecondary);
         }
 
+        CallRecorder recorder = CallRecorder.getInstance();
+        boolean isVideo = VideoUtils.isVideoCall(mPrimary);
+        boolean isEnabled = getPrefs(mContext).getBoolean(mContext.getString(R.string.call_recording_automatically_key), false);
+
         // Start/stop timers.
         if (isPrimaryCallActive()) {
             Log.d(this, "Starting the calltime timer");
             mPrimary.triggerCalcBaseChronometerTime();
             mCallTimer.start(CALL_TIME_UPDATE_INTERVAL_MS);
+            if (!mIsRecording && isEnabled && !isVideo && CallButtonFragment.getInstance() != null) {
+                mIsRecording = true;
+                new Handler().postDelayed(new Runnable() {
+                    @Override
+                    public void run() {
+                        CallButtonFragment.getInstance().callRecordClicked(true);
+                    }
+                }, 500);
+            }
         } else {
             Log.d(this, "Canceling the calltime timer");
             mCallTimer.cancel();
             ui.setPrimaryCallElapsedTime(false, 0);
+            if (isEnabled && !isVideo) {
+                if (recorder.isRecording()) {
+                    recorder.finishRecording();
+                }
+            }
         }
 
         // Set the call state
diff --git a/res/values-ru/hnt_strings.xml b/res/values-ru/hnt_strings.xml
new file mode 100644
index 000000000..64cba6dc5
--- /dev/null
+++ b/res/values-ru/hnt_strings.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  ~ Copyright (C) 2013 The Android Open Source Project
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License
+  -->
+
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <!-- Automatically call recording -->
+    <string name="call_recording_automatically_title">Автоматическая запись</string>
+    <string name="call_recording_automatically_summary">Автоматически записывать после звонка</string>
+</resources>
diff --git a/res/values/hnt_strings.xml b/res/values/hnt_strings.xml
new file mode 100644
index 000000000..ce8fab76a
--- /dev/null
+++ b/res/values/hnt_strings.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  ~ Copyright (C) 2013 The Android Open Source Project
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License
+  -->
+
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <!-- Automatically call recording -->
+    <string name="call_recording_automatically_key" translatable="false">call_recording_automatically</string>
+    <string name="call_recording_automatically_title">Recording automatically</string>
+    <string name="call_recording_automatically_summary">Recording automatically after call</string>
+</resources>
diff --git a/res/xml/sound_settings.xml b/res/xml/sound_settings.xml
index 00d509cae..5eb2f5902 100644
--- a/res/xml/sound_settings.xml
+++ b/res/xml/sound_settings.xml
@@ -78,6 +78,11 @@
             android:entryValues="@array/call_recording_encoder_values"
             android:defaultValue="0" />
 
+        <SwitchPreference
+            android:key="@string/call_recording_automatically_key"
+            android:title="@string/call_recording_automatically_title"
+            android:summary="@string/call_recording_automatically_summary" />
+
     </PreferenceCategory>
 
 </PreferenceScreen>
