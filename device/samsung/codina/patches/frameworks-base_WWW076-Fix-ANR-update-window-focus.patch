Subject: [PATCH] Fix ANR issue, update window focus when remove dialog with a subwindow. 

Step: 1. create a dialog with a subwindow (e.g. MENU window), and the subwindow get the window focus. 
      2. dismiss the dialog, it may not remove the dialog's window immediately due to exit animation. 
      and then, the focus will be still on subwindow. When the animation is exit, it will remove the 
      subwindow without update window focus, then ANR occurs!

Fix: when a window have a subwindow and destroy in exit animation, we should update the window focus.

diff --git a/services/core/java/com/android/server/wm/AppWindowToken.java b/services/core/java/com/android/server/wm/AppWindowToken.java
index b907da6..9beed68 100644
--- a/services/core/java/com/android/server/wm/AppWindowToken.java
+++ b/services/core/java/com/android/server/wm/AppWindowToken.java
@@ -419,7 +419,7 @@
                 win.destroyOrSaveSurface();
             }
             if (win.mRemoveOnExit) {
-                service.removeWindowInnerLocked(win);
+                service.removeWindowInnerLocked(win, win.mChildWindows.size() > 0);
             }
             final DisplayContent displayContent = win.getDisplayContent();
             if (displayContent != null && !displayList.contains(displayContent)) {
diff --git a/services/core/java/com/android/server/wm/WindowManagerService.java b/services/core/java/com/android/server/wm/WindowManagerService.java
index 3687512..6cbec5b 100644
--- a/services/core/java/com/android/server/wm/WindowManagerService.java
+++ b/services/core/java/com/android/server/wm/WindowManagerService.java
@@ -2550,6 +2550,10 @@
     }
 
     void removeWindowInnerLocked(WindowState win) {
+        removeWindowInnerLocked(win, false);
+    }
+
+    void removeWindowInnerLocked(WindowState win, boolean updateFocus) {
         if (win.mRemoved) {
             // Nothing to do.
             if (DEBUG_ADD_REMOVE) Slog.v(TAG_WM,
@@ -2658,6 +2662,9 @@
                 }
             }
         }
+        if (updateFocus) {
+            updateFocusedWindowLocked(UPDATE_FOCUS_NORMAL, false /*updateInputWindows*/);
+        }
 
         mInputMonitor.updateInputWindowsLw(true /*force*/);
     }
