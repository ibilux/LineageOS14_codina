Subject: [PATCH] Avoid the restart process for launching provider killed by AMS.

The case is that a content provider process killed by LowmemoryKiller while the
provider launching time. And AMS will restart it for the launching provider,and
reuse the ProcessRecord, it may be killed by AMS#updateOomAdjLocked in the end
of attachApplicationLocked for empty cached process.

After that the process will restart again, and may be killed angian, another
restart, another restart...

So, we should give time for process to launch its provider, avoid the restart
and kill circle.

diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index 867a7cb..fb0adf8 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -6728,6 +6728,7 @@
 
         mHandler.removeMessages(PROC_START_TIMEOUT_MSG, app);
 
+        boolean didSomething = false;
         boolean normalMode = mProcessesReady || isAllowedWhileBooting(app.info);
         List<ProviderInfo> providers = normalMode ? generateApplicationProvidersLocked(app) : null;
 
@@ -6735,6 +6736,7 @@
             Message msg = mHandler.obtainMessage(CONTENT_PROVIDER_PUBLISH_TIMEOUT_MSG);
             msg.obj = app;
             mHandler.sendMessageDelayed(msg, CONTENT_PROVIDER_PUBLISH_TIMEOUT);
+            didSomething = true;
         }
 
         checkTime(startTime, "attachApplicationLocked: before bindApplication");
@@ -6830,7 +6832,6 @@
         mProcessesOnHold.remove(app);
 
         boolean badApp = false;
-        boolean didSomething = false;
 
         // See if the top visible activity is waiting to run in this process...
         if (normalMode) {
