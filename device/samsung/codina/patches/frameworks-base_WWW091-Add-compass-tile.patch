Subject: [PATCH] SystemUI: port compass tile to cm-14.1

diff --git a/packages/SystemUI/res/drawable/ic_qs_compass_off.xml b/packages/SystemUI/res/drawable/ic_qs_compass_off.xml
new file mode 100644
index 0000000..0eed69c
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_compass_off.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/*
+ * Copyright (C) 2015 The CyanogenMod Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="64dp"
+    android:height="64dp"
+    android:viewportWidth="48"
+    android:viewportHeight="48">
+
+    <path
+        android:fillColor="#4DFFFFFF"
+        android:pathData="M42,39.2L8.8,6L6,8.8l9.8,9.8l-1.5,3.7c-0.4,1-0.4,2.2,0,3.3l7.8,19.1c0.7,1.7,3.1,1.7,3.8,0l4.6-11.3
+l8.6,8.6L42,39.2Z
+M24,28c-2.2,0-4-1.8-4-4c0-0.4,0.1-0.7,0.1-1l4.9,4.9C24.7,27.9,24.4,28,24,28z
+M33.8,25.3L19.1,10.7l3-7.4
+c0.7-1.7,3.1-1.7,3.8,0l7.8,19.1C34.1,23.3,34.1,24.4,33.8,25.3z" />
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_compass_on.xml b/packages/SystemUI/res/drawable/ic_qs_compass_on.xml
new file mode 100644
index 0000000..627cd0f
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_compass_on.xml
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/*
+ * Copyright (C) 2015 The CyanogenMod Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="48dp"
+    android:height="48dp"
+    android:viewportWidth="48"
+    android:viewportHeight="48">
+
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M25.9,3.3l7.8,19.1c0.4,1,0.4,2.2,0,3.3l-7.8,19.1c-0.7,1.7-3.1,1.7-3.8,0l-7.8-19.1c-0.4-1-0.4-2.2,0-3.3
+l7.8-19.1C22.8,1.6,25.2,1.6,25.9,3.3Z
+M24,20c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S26.2,20,24,20z
+M26,14v-4c0-1.1-0.9-2-2-2 s-2,0.9-2,2v4c0,1.1,0.9,2,2,2S26,15.1,26,14z" />
+</vector>
diff --git a/packages/SystemUI/res/values/cm_arrays.xml b/packages/SystemUI/res/values/cm_arrays.xml
index c0fb973..1105ec5 100644
--- a/packages/SystemUI/res/values/cm_arrays.xml
+++ b/packages/SystemUI/res/values/cm_arrays.xml
@@ -68,4 +68,16 @@
         <item>@string/accessibility_quick_settings_live_display_changed_night</item>
         <item>@string/accessibility_quick_settings_live_display_changed_outdoor</item>
     </string-array>
+
+    <!-- Cardinal directions for the compass tile -->
+    <string-array name="cardinal_directions">
+        <item>@string/quick_settings_compass_N</item>  <!-- North -->
+        <item>@string/quick_settings_compass_NE</item> <!-- North east -->
+        <item>@string/quick_settings_compass_E</item>  <!-- East -->
+        <item>@string/quick_settings_compass_SE</item> <!-- South east -->
+        <item>@string/quick_settings_compass_S</item>  <!-- South -->
+        <item>@string/quick_settings_compass_SW</item> <!-- South west -->
+        <item>@string/quick_settings_compass_W</item>  <!-- West -->
+        <item>@string/quick_settings_compass_NW</item> <!-- North west -->
+    </string-array>
-</resources>
\ No newline at end of file
+</resources>
diff --git a/packages/SystemUI/res/values/cm_strings.xml b/packages/SystemUI/res/values/cm_strings.xml
index c0fb973..1102ec5 100644
--- a/packages/SystemUI/res/values/cm_strings.xml
+++ b/packages/SystemUI/res/values/cm_strings.xml
@@ -205,6 +205,23 @@
     <string name="accessibility_quick_settings_caffeine_off">Caffeine off</string>
     <string name="accessibility_quick_settings_caffeine_on">Caffeine on</string>
 
+    <!-- Compass QS tile -->
+    <string name="quick_settings_compass_label">Compass</string>
+    <string name="quick_settings_compass_value"><xliff:g id="degrees">%1$.0f</xliff:g>\u00b0 <xliff:g id="direction">%2$s</xliff:g></string>
+    <string name="quick_settings_compass_init">Initializing\u2026</string>
+    <string name="accessibility_quick_settings_compass_off">Compass off.</string>
+    <string name="accessibility_quick_settings_compass_on">Compass on.</string>
+    <string name="accessibility_quick_settings_compass_changed_off">Compass turned off.</string>
+    <string name="accessibility_quick_settings_compass_changed_on">Compass turned on.</string>
+    <string name="quick_settings_compass_N">N</string>
+    <string name="quick_settings_compass_NE">NE</string>
+    <string name="quick_settings_compass_E">E</string>
+    <string name="quick_settings_compass_SE">SE</string>
+    <string name="quick_settings_compass_S">S</string>
+    <string name="quick_settings_compass_SW">SW</string>
+    <string name="quick_settings_compass_W">W</string>
+    <string name="quick_settings_compass_NW">NW</string>
+
     <!-- Heads up QS tile -->
     <string name="quick_settings_heads_up_label">Heads up</string>
     <string name="accessibility_quick_settings_heads_up_off">Heads up off.</string>
diff --git a/packages/SystemUI/res/values-ru/cm_strings.xml b/packages/SystemUI/res/values-ru/cm_strings.xml
index c0fb973..1202ec5 100644
--- a/packages/SystemUI/res/values-ru/cm_strings.xml
+++ b/packages/SystemUI/res/values-ru/cm_strings.xml
@@ -177,6 +177,21 @@
   <string name="quick_settings_caffeine_label">Запрет сна</string>
   <string name="accessibility_quick_settings_caffeine_off">Переход в спящий режим разрешён.</string>
   <string name="accessibility_quick_settings_caffeine_on">Переход в спящий режим запрещён.</string>
+  <!-- Compass QS tile -->
+  <string name="quick_settings_compass_label">Компас</string>
+  <string name="quick_settings_compass_init">Включение\u2026</string>
+  <string name="accessibility_quick_settings_compass_off">Компас выкл.</string>
+  <string name="accessibility_quick_settings_compass_on">Компас вкл.</string>
+  <string name="accessibility_quick_settings_compass_changed_off">Компас был выключен</string>
+  <string name="accessibility_quick_settings_compass_changed_on">Компас был включен</string>
+  <string name="quick_settings_compass_N">С</string>
+  <string name="quick_settings_compass_NE">СВ</string>
+  <string name="quick_settings_compass_E">В</string>
+  <string name="quick_settings_compass_SE">ЮВ</string>
+  <string name="quick_settings_compass_S">Ю</string>
+  <string name="quick_settings_compass_SW">ЮЗ</string>
+  <string name="quick_settings_compass_W">З</string>
+  <string name="quick_settings_compass_NW">СЗ</string>
   <!-- Heads up QS tile -->
   <string name="quick_settings_heads_up_label">Всплывающие уведомления</string>
   <string name="accessibility_quick_settings_heads_up_off">Всплывающие уведомления отключены.</string>
diff --git a/packages/SystemUI/res/values/config.xml b/packages/SystemUI/res/values/config.xml
index 9699f00..e752978 100644
--- a/packages/SystemUI/res/values/config.xml
+++ b/packages/SystemUI/res/values/config.xml
@@ -105,7 +105,7 @@
 
     <!-- Tiles native to System UI. Order should match "quick_settings_tiles_default" -->
     <string name="quick_settings_tiles_stock" translatable="false">
-        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,livedisplay,adb_network,ambient_display,caffeine,heads_up,sync,usb_tether,volume_panel,profiles
+        wifi,cell,battery,dnd,flashlight,rotation,bt,airplane,nfc,location,hotspot,inversion,saver,work,cast,night,livedisplay,adb_network,ambient_display,caffeine,compass,heads_up,sync,usb_tether,volume_panel,profiles
     </string>
 
     <!-- The tiles to display in QuickSettings -->
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CompassTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CompassTile.java
new file mode 100644
index 0000000..d14a4ea
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CompassTile.java
@@ -0,0 +1,220 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import android.content.Context;
+import android.content.Intent;
+import android.hardware.Sensor;
+import android.hardware.SensorEvent;
+import android.hardware.SensorEventListener;
+import android.hardware.SensorManager;
+import android.widget.ImageView;
+import com.android.internal.logging.MetricsProto.MetricsEvent;
+import com.android.systemui.R;
+import com.android.systemui.qs.QSIconView;
+import com.android.systemui.qs.QSTile;
+
+public class CompassTile extends QSTile<QSTile.BooleanState> implements SensorEventListener {
+    private final static float ALPHA = 0.97f;
+
+    private boolean mActive = false;
+
+    private SensorManager mSensorManager;
+    private Sensor mAccelerationSensor;
+    private Sensor mGeomagneticFieldSensor;
+
+    private float[] mAcceleration;
+    private float[] mGeomagnetic;
+
+    private ImageView mImage;
+    private boolean mListeningSensors;
+
+    public CompassTile(Host host) {
+        super(host);
+        mSensorManager = (SensorManager) mContext.getSystemService(Context.SENSOR_SERVICE);
+        mAccelerationSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
+        mGeomagneticFieldSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
+    }
+
+    @Override
+    public BooleanState newTileState() {
+        return new BooleanState();
+    }
+
+    @Override
+    protected void handleDestroy() {
+        super.handleDestroy();
+        setListeningSensors(false);
+        mSensorManager = null;
+        mImage = null;
+    }
+
+    @Override
+    public QSIconView createTileView(Context context) {
+        QSIconView iconView = super.createTileView(context);
+        mImage = (ImageView) iconView.findViewById(android.R.id.icon);
+        return iconView;
+    }
+
+    @Override
+    protected void handleClick() {
+        mActive = !mActive;
+        refreshState();
+        setListeningSensors(mActive);
+    }
+
+    @Override
+    public void handleLongClick() {
+        handleClick();
+    }
+
+    @Override
+    public Intent getLongClickIntent() {
+        return null;
+    }
+
+    private void setListeningSensors(boolean listening) {
+        if (listening == mListeningSensors) return;
+        mListeningSensors = listening;
+        if (mListeningSensors) {
+            mSensorManager.registerListener(
+                    this, mAccelerationSensor, SensorManager.SENSOR_DELAY_GAME);
+            mSensorManager.registerListener(
+                    this, mGeomagneticFieldSensor, SensorManager.SENSOR_DELAY_GAME);
+        } else {
+            mSensorManager.unregisterListener(this);
+        }
+    }
+
+    @Override
+    public CharSequence getTileLabel() {
+        return mContext.getString(R.string.quick_settings_compass_label);
+    }
+
+    @Override
+    protected void handleUpdateState(BooleanState state, Object arg) {
+        Float degrees = arg == null ? 0 :(float) arg;
+
+        state.value = mActive;
+
+        if (state.value) {
+            state.icon = ResourceIcon.get(R.drawable.ic_qs_compass_on);
+            if (arg != null) {
+                state.label = formatValueWithCardinalDirection(degrees);
+
+                float target = 360 - degrees;
+                float relative = target - mImage.getRotation();
+                if (relative > 180) relative -= 360;
+
+                mImage.setRotation(mImage.getRotation() + relative / 2);
+
+            } else {
+                state.label = mContext.getString(R.string.quick_settings_compass_init);
+                mImage.setRotation(0);
+            }
+            state.contentDescription = mContext.getString(
+                    R.string.accessibility_quick_settings_compass_on);
+        } else {
+            state.icon = ResourceIcon.get(R.drawable.ic_qs_compass_off);
+            state.label = mContext.getString(R.string.quick_settings_compass_label);
+            state.contentDescription = mContext.getString(
+                    R.string.accessibility_quick_settings_compass_off);
+            mImage.setRotation(0);
+        }
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return MetricsEvent.DEVELOPMENT;
+    }
+
+    @Override
+    protected String composeChangeAnnouncement() {
+        if (mState.value) {
+            return mContext.getString(R.string.accessibility_quick_settings_compass_changed_on);
+        } else {
+            return mContext.getString(R.string.accessibility_quick_settings_compass_changed_off);
+        }
+    }
+
+    @Override
+    public void setListening(boolean listening) {
+        if (!listening) {
+            setListeningSensors(false);
+            mActive = false;
+        }
+    }
+
+    private String formatValueWithCardinalDirection(float degree) {
+        int cardinalDirectionIndex = (int) (Math.floor(((degree - 22.5) % 360) / 45) + 1) % 8;
+        String[] cardinalDirections = mContext.getResources().getStringArray(
+                R.array.cardinal_directions);
+
+        return mContext.getString(R.string.quick_settings_compass_value, degree,
+                cardinalDirections[cardinalDirectionIndex]);
+    }
+
+    @Override
+    public void onSensorChanged(SensorEvent event) {
+        float[] values;
+        if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {
+            if (mAcceleration == null) {
+                mAcceleration = event.values.clone();
+            }
+
+            values = mAcceleration;
+        } else {
+            // Magnetic field sensor
+            if (mGeomagnetic == null) {
+                mGeomagnetic = event.values.clone();
+            }
+
+            values = mGeomagnetic;
+        }
+
+        for (int i = 0; i < 3; i++) {
+            values[i] = ALPHA * values[i] + (1 - ALPHA) * event.values[i];
+        }
+
+        if (!mActive || !mListeningSensors || mAcceleration == null || mGeomagnetic == null) {
+            // Nothing to do at this moment
+            return;
+        }
+
+        float R[] = new float[9];
+        float I[] = new float[9];
+        if (!SensorManager.getRotationMatrix(R, I, mAcceleration, mGeomagnetic)) {
+            // Rotation matrix couldn't be calculated
+            return;
+        }
+
+        // Get the current orientation
+        float[] orientation = new float[3];
+        SensorManager.getOrientation(R, orientation);
+
+        // Convert azimuth to degrees
+        Float newDegree = Float.valueOf((float) Math.toDegrees(orientation[0]));
+        newDegree = (newDegree + 360) % 360;
+
+        refreshState(newDegree);
+    }
+
+    @Override
+    public void onAccuracyChanged(Sensor sensor, int accuracy) {
+        // noop
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
index e76fafc..05dd1d8 100755
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
@@ -50,6 +50,7 @@
 import com.android.systemui.qs.tiles.CastTile;
 import com.android.systemui.qs.tiles.CellularTile;
 import com.android.systemui.qs.tiles.ColorInversionTile;
+import com.android.systemui.qs.tiles.CompassTile;
 import com.android.systemui.qs.tiles.DataSaverTile;
 import com.android.systemui.qs.tiles.DndTile;
 import com.android.systemui.qs.tiles.FlashlightTile;
@@ -450,6 +451,7 @@
         else if (tileSpec.equals("adb_network")) return new AdbOverNetworkTile(this);
         else if (tileSpec.equals("ambient_display")) return new AmbientDisplayTile(this);
         else if (tileSpec.equals("caffeine")) return new CaffeineTile(this);
+        else if (tileSpec.equals("compass")) return new CompassTile(this);
         else if (tileSpec.equals("heads_up")) return new HeadsUpTile(this);
         else if (tileSpec.equals("sync")) return new SyncTile(this);
         else if (tileSpec.equals("usb_tether")) return new UsbTetherTile(this);
