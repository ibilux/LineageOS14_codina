 NuPlayer: fix possible deadlock due to recursive mutex access

The interface getCurrentPosition() should be called without mutex
held from any threads now, since fillAudioBuffer() has already
locked the mutex at the begining, recursive access can cause
deadlock.
Use the interface of MediaClock instead can avoid this.

diff --git a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
index 6b88404..01a7286 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
+++ b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
@@ -848,12 +848,12 @@ size_t NuPlayer::Renderer::fillAudioBuffer(void *buffer, size_t size) {
 
     if (mAudioFirstAnchorTimeMediaUs >= 0) {
         int64_t nowUs = ALooper::GetNowUs();
-        int64_t nowMediaUs = 0;
+        int64_t nowMediaUs = -1;
         int64_t playedDuration = mAudioSink->getPlayedOutDurationUs(nowUs);
         if (playedDuration >= 0) {
             nowMediaUs = mAudioFirstAnchorTimeMediaUs + playedDuration;
         } else {
-            getCurrentPosition(&nowMediaUs);
+            mMediaClock->getMediaTime(nowUs, &nowMediaUs);
         }
         // we don't know how much data we are queueing for offloaded tracks.
         mMediaClock->updateAnchor(nowMediaUs, nowUs, INT64_MAX);
