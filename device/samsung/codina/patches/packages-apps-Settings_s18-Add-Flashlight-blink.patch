Subject: [PATCH] Add Flashlight blink on incoming calls [2/3]

  Add a device specific flashlight check

diff --git a/res/values/cr_arrays.xml b/res/values/cr_arrays.xml
index 29184db..4e0bf82 100644
--- a/res/values/cr_arrays.xml
+++ b/res/values/cr_arrays.xml
@@ -42,4 +42,19 @@
         <item>2</item>
     </string-array>
 
+    <!-- Blink flashlight for incoming calls -->
+    <string-array name="flashlight_on_call_entries">
+       <item>@string/flashlight_on_call_disabled</item>
+       <item>@string/flashlight_on_call_not_dnd</item>
+       <item>@string/flashlight_on_call_dnd</item>
+       <item>@string/flashlight_on_call_always</item>
+    </string-array>
+
+    <string-array name="flashlight_on_call_values">
+        <item>0</item>
+        <item>1</item>
+        <item>2</item>
+        <item>3</item>
+    </string-array>
+
 </resources>
diff --git a/res/values/cr_strings.xml b/res/values/cr_strings.xml
index 7099d9b..07735de 100644
--- a/res/values/cr_strings.xml
+++ b/res/values/cr_strings.xml
@@ -94,4 +94,11 @@
     <!-- Screenshot sound -->
     <string name="screenshot_sound_title">Screenshot sound</string>
 
+    <!-- Blink flashlight for incoming calls -->
+    <string name="flashlight_on_call_title">Blink Flashlight on call</string>
+    <string name="flashlight_on_call_disabled">Disabled</string>
+    <string name="flashlight_on_call_not_dnd">Blink flashlight only in ringer mode</string>
+    <string name="flashlight_on_call_dnd">Blink flashlight only in DND mode</string>
+    <string name="flashlight_on_call_always">Always blink flashlight</string>
+
 </resources>
diff --git a/res/xml/animation_settings.xml b/res/xml/animation_settings.xml
index 41203be..01917ec 100644
--- a/res/xml/animation_settings.xml
+++ b/res/xml/animation_settings.xml
@@ -31,4 +31,10 @@
         android:entryValues="@array/screen_off_animation_values"
         android:persistent="false" />
 
+    <ListPreference
+        android:key="flashlight_on_call"
+        android:title="@string/flashlight_on_call_title"
+        android:entries="@array/flashlight_on_call_entries"
+        android:entryValues="@array/flashlight_on_call_values" />
+
 </PreferenceScreen>
diff --git a/src/com/android/settings/cyanogenmod/AnimationSettings.java b/src/com/android/settings/cyanogenmod/AnimationSettings.java
index 66e89b9..80e311e 100644
--- a/src/com/android/settings/cyanogenmod/AnimationSettings.java
+++ b/src/com/android/settings/cyanogenmod/AnimationSettings.java
@@ -49,11 +49,13 @@
     private static final String SCROLLINGCACHE_PERSIST_PROP = "persist.sys.scrollingcache";
     private static final String SCROLLINGCACHE_DEFAULT = "1";
     private static final String SCREEN_OFF_ANIMATION = "screen_off_animation";
+    private static final String FLASHLIGHT_ON_CALL = "flashlight_on_call";
 
     private Context mContext;
 
     private ListPreference mScrollingCachePref;
     private ListPreference mScreenOffAnimations;
+    private ListPreference mFlashlightOnCall;
 
     @Override
     protected int getMetricsCategory() {
@@ -84,6 +86,13 @@ public void onCreate(Bundle savedInstanceState) {
         mScreenOffAnimations.setSummary(mScreenOffAnimations.getEntry());
         mScreenOffAnimations.setOnPreferenceChangeListener(this);
 
+        mFlashlightOnCall = (ListPreference) findPreference(FLASHLIGHT_ON_CALL);
+        int flashlightValue = Settings.System.getInt(resolver,
+                Settings.System.FLASHLIGHT_ON_CALL, 0);
+        mFlashlightOnCall.setValue(String.valueOf(flashlightValue));
+        mFlashlightOnCall.setSummary(mFlashlightOnCall.getEntry());
+        mFlashlightOnCall.setOnPreferenceChangeListener(this);
+
     }
 
     @Override
@@ -105,6 +114,13 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
             mScreenOffAnimations.setValue(String.valueOf(newValue));
             mScreenOffAnimations.setSummary(mScreenOffAnimations.getEntry());
             return true;
+        } else if (preference == mFlashlightOnCall) {
+            int flashlightValue = Integer.parseInt(((String) newValue).toString());
+            Settings.System.putInt(resolver,
+                Settings.System.FLASHLIGHT_ON_CALL, flashlightValue);
+            mFlashlightOnCall.setValue(String.valueOf(flashlightValue));
+            mFlashlightOnCall.setSummary(mFlashlightOnCall.getEntry());
+            return true;
         }
         return false;
     }
