 init: add ability to set rlimit by service
* Previously, it was only possible to set rlimits globally
* Similar to commits by Motorola and Sony, but refactored for
  Android Nougat, which changed the init service significantly.

diff --git a/init/service.cpp b/init/service.cpp
index 320d2ba..13fc500 100644
--- a/init/service.cpp
+++ b/init/service.cpp
@@ -175,6 +175,19 @@ bool Service::HandleConsole(const std::vector<std::string>& args, std::string* e
     return true;
 }
 
+bool Service::HandleRlimit(const std::vector<std::string>& args, std::string* err) {
+	struct RlimitInfo *ri;
+	Service* svc = nullptr;
+        ri = (RlimitInfo*) calloc(1, sizeof(*ri));
+
+        ri->resource = stoi(args[1]);
+        ri->limit.rlim_cur = stoi(args[2]);
+        ri->limit.rlim_max = stoi(args[3]);
+        ri->next = svc->rlimits;
+        svc->rlimits = ri;
+    return true;
+}
+
 bool Service::HandleCritical(const std::vector<std::string>& args, std::string* err) {
     flags_ |= SVC_CRITICAL;
     return true;
@@ -284,6 +297,7 @@ Service::OptionHandlerMap::Map& Service::OptionHandlerMap::map() const {
         {"class",       {1,     1,    &Service::HandleClass}},
         {"console",     {0,     0,    &Service::HandleConsole}},
         {"critical",    {0,     0,    &Service::HandleCritical}},
+        {"rlimit",      {3,     0,    &Service::HandleRlimit}},
         {"disabled",    {0,     0,    &Service::HandleDisabled}},
         {"group",       {1,     NR_SVC_SUPP_GIDS + 1, &Service::HandleGroup}},
         {"ioprio",      {2,     2,    &Service::HandleIoprio}},
diff --git a/init/service.h b/init/service.h
index b01f6f7..ac58100 100644
--- a/init/service.h
+++ b/init/service.h
@@ -18,6 +18,7 @@
 #define _INIT_SERVICE_H
 
 #include <sys/types.h>
+#include <sys/resource.h>
 
 #include <cutils/iosched_policy.h>
 
@@ -66,6 +67,12 @@ struct ServiceEnvironmentInfo {
     std::string value;
 };
 
+struct RlimitInfo {
+    struct RlimitInfo *next;
+    int resource;
+    struct rlimit limit;
+};
+
 class Service {
 public:
     Service(const std::string& name, const std::string& classname,
@@ -114,6 +121,7 @@ class Service {
     bool HandleClass(const std::vector<std::string>& args, std::string* err);
     bool HandleConsole(const std::vector<std::string>& args, std::string* err);
     bool HandleCritical(const std::vector<std::string>& args, std::string* err);
+    bool HandleRlimit(const std::vector<std::string>& args, std::string* err);
     bool HandleDisabled(const std::vector<std::string>& args, std::string* err);
     bool HandleGroup(const std::vector<std::string>& args, std::string* err);
     bool HandleIoprio(const std::vector<std::string>& args, std::string* err);
@@ -155,6 +163,8 @@ class Service {
     IoSchedClass ioprio_class_;
     int ioprio_pri_;
 
+    struct RlimitInfo *rlimits;
+
     std::vector<std::string> args_;
 };
 
