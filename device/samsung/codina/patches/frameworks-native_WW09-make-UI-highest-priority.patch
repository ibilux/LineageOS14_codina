native: make UI highest priority

diff --git a/services/surfaceflinger/DispSync.cpp b/services/surfaceflinger/DispSync.cpp
index 44122d0..064e119 100644
--- a/services/surfaceflinger/DispSync.cpp
+++ b/services/surfaceflinger/DispSync.cpp
@@ -383,7 +383,7 @@ DispSync::DispSync(const char* name) :
         mRefreshSkipCount(0),
         mThread(new DispSyncThread(name)) {
 
-    mThread->run("DispSync", PRIORITY_URGENT_DISPLAY + PRIORITY_MORE_FAVORABLE);
+    mThread->run("DispSync", PRIORITY_REALTIME);
 #ifndef HARDWARE_SCHED_FIFO
     // set DispSync to SCHED_FIFO to minimize jitter
     struct sched_param param = {0};
diff --git a/services/surfaceflinger/DisplayHardware/HWComposer_hwc1.cpp b/services/surfaceflinger/DisplayHardware/HWComposer_hwc1.cpp
index 45122d0..064e119 100644
--- a/services/surfaceflinger/DisplayHardware/HWComposer_hwc1.cpp
+++ b/services/surfaceflinger/DisplayHardware/HWComposer_hwc1.cpp
@@ -1357,7 +1357,7 @@ void HWComposer::VSyncThread::setEnabled(bool enabled) {
 }
 
 void HWComposer::VSyncThread::onFirstRef() {
-    run("VSyncThread", PRIORITY_URGENT_DISPLAY + PRIORITY_MORE_FAVORABLE);
+    run("VSyncThread", PRIORITY_REALTIME);
 }
 
 bool HWComposer::VSyncThread::threadLoop() {
diff --git a/services/surfaceflinger/EventThread.cpp b/services/surfaceflinger/EventThread.cpp
index 46122d0..064e119 100644
--- a/services/surfaceflinger/EventThread.cpp
+++ b/services/surfaceflinger/EventThread.cpp
@@ -92,7 +92,7 @@ void EventThread::sendVsyncHintOnLocked() {
 }
 
 void EventThread::onFirstRef() {
-    run("EventThread", PRIORITY_URGENT_DISPLAY + PRIORITY_MORE_FAVORABLE);
+    run("EventThread", PRIORITY_REALTIME);
     android_set_rt_ioprio(getTid(), 1);
 }
 
