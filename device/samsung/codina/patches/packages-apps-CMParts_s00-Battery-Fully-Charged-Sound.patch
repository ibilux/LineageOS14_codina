Subject: [PATCH] Battery Fully Charged Sound [2/3]

diff --git a/res/values/cr_strings.xml b/res/values/cr_strings.xml
new file mode 100644
index 0000000..5a6fb21
--- /dev/null
+++ b/res/values/cr_strings.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+	Copyright (C) 2017 The LineageOS Project
+
+	Licensed under the Apache License, Version 2.0 (the "License");
+	you may not use this file except in compliance with the License.
+	You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+	Unless required by applicable law or agreed to in writing, software
+	distributed under the License is distributed on an "AS IS" BASIS,
+	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+	See the License for the specific language governing permissions and
+	limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+
+    <!-- Battery fully charged sound -->
+    <string name="battery_fully_charged_sound_enabled_title">Battery fully charged sound</string>
+    <string name="battery_fully_charged_sound_enabled_summary">Play a sound when battery fully charged</string>
+    <string name="battery_fully_charged_sound_ringtone_title">Notification sound</string>
+    <string name="battery_fully_charged_sound_ringtone_silent">Silent</string>
+
+</resources>
diff --git a/res/xml/charging_sounds_settings.xml b/res/xml/charging_sounds_settings.xml
index a295c5a..24b5b35 100644
--- a/res/xml/charging_sounds_settings.xml
+++ b/res/xml/charging_sounds_settings.xml
@@ -36,4 +36,15 @@
         android:dependency="charging_sounds_enabled"
         android:persistent="false" />
 
+    <cyanogenmod.preference.GlobalSettingSwitchPreference
+        android:key="battery_fully_charged_sound_enabled"
+        android:title="@string/battery_fully_charged_sound_enabled_title"
+        android:summary="@string/battery_fully_charged_sound_enabled_summary" />
+
+    <Preference
+        android:key="battery_fully_charged_sound_ringtone"
+        android:title="@string/battery_fully_charged_sound_ringtone_title"
+        android:dependency="battery_fully_charged_sound_enabled"
+        android:persistent="false" />
+
 </PreferenceScreen>
diff --git a/src/org/cyanogenmod/cmparts/sounds/ChargingSoundsSettings.java b/src/org/cyanogenmod/cmparts/sounds/ChargingSoundsSettings.java
index 630a22c..1d1c670 100644
--- a/src/org/cyanogenmod/cmparts/sounds/ChargingSoundsSettings.java
+++ b/src/org/cyanogenmod/cmparts/sounds/ChargingSoundsSettings.java
@@ -37,6 +37,7 @@
 
     private static final String KEY_POWER_NOTIFICATIONS_VIBRATE = "power_notifications_vibrate";
     private static final String KEY_CHARGING_SOUNDS_RINGTONE = "charging_sounds_ringtone";
+    private static final String KEY_BATTERY_FULLY_CHARGED_SOUND_RINGTONE = "battery_fully_charged_sound_ringtone";
 
     // Used for power notification uri string if set to silent
     private static final String RINGTONE_SILENT_URI_STRING = "silent";
@@ -44,7 +45,11 @@
     // Request code for charging notification ringtone picker
     private static final int REQUEST_CODE_CHARGING_NOTIFICATIONS_RINGTONE = 1;
 
+    // Request code for battery fully charged ringtone picker
+    private static final int REQUEST_CODE_BATTERY_FULLY_CHARGED_RINGTONE = 2;
+
     private Preference mChargingSoundsRingtone;
+    private Preference mBatteryFullyChargedSoundRingtone;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -65,6 +70,15 @@ public void onCreate(Bundle savedInstanceState) {
         } else {
             updateChargingRingtone(curTone, false);
         }
+
+        mBatteryFullyChargedSoundRingtone = findPreference(KEY_BATTERY_FULLY_CHARGED_SOUND_RINGTONE);
+        String curBatteryFullyChargedTone = CMSettings.Global.getString(getContentResolver(),
+                CMSettings.Global.BATTERY_FULLY_CHARGED_RINGTONE);
+        if (curBatteryFullyChargedTone == null) {
+            updateBatteryFullyChargedRingtone(Settings.System.DEFAULT_NOTIFICATION_URI.toString(), true);
+        } else {
+            updateBatteryFullyChargedRingtone(curBatteryFullyChargedTone, false);
+        }
     }
 
     private void updateChargingRingtone(String toneUriString, boolean persist) {
@@ -95,12 +109,44 @@ private void updateChargingRingtone(String toneUriString, boolean persist) {
         }
     }
 
+    private void updateBatteryFullyChargedRingtone(String toneUriString, boolean persist) {
+        final String toneName;
+
+        if (toneUriString != null && !toneUriString.equals(RINGTONE_SILENT_URI_STRING)) {
+            final Ringtone ringtone = RingtoneManager.getRingtone(getActivity(),
+                    Uri.parse(toneUriString));
+            if (ringtone != null) {
+                toneName = ringtone.getTitle(getActivity());
+            } else {
+                // Unlikely to ever happen, but is possible if the ringtone
+                // previously chosen is removed during an upgrade
+                toneName = "";
+                toneUriString = Settings.System.DEFAULT_NOTIFICATION_URI.toString();
+                persist = true;
+            }
+        } else {
+            // Silent
+            toneName = getString(R.string.battery_fully_charged_sound_ringtone_silent);
+            toneUriString = RINGTONE_SILENT_URI_STRING;
+        }
+
+        mBatteryFullyChargedSoundRingtone.setSummary(toneName);
+        if (persist) {
+            CMSettings.Global.putString(getContentResolver(),
+                    CMSettings.Global.BATTERY_FULLY_CHARGED_RINGTONE, toneUriString);
+        }
+    }
+
     @Override
     public boolean onPreferenceTreeClick(Preference preference) {
         if (preference == mChargingSoundsRingtone) {
             launchNotificationSoundPicker(REQUEST_CODE_CHARGING_NOTIFICATIONS_RINGTONE,
                     CMSettings.Global.getString(getContentResolver(),
                     CMSettings.Global.POWER_NOTIFICATIONS_RINGTONE));
+        } else if (preference == mBatteryFullyChargedSoundRingtone) {
+            launchBatteryFullyChargedSoundPicker(REQUEST_CODE_BATTERY_FULLY_CHARGED_RINGTONE,
+                    CMSettings.Global.getString(getContentResolver(),
+                    CMSettings.Global.BATTERY_FULLY_CHARGED_RINGTONE));
         }
         return super.onPreferenceTreeClick(preference);
     }
@@ -123,6 +169,24 @@ private void launchNotificationSoundPicker(int requestCode, String toneUriString
         startActivityForResult(intent, requestCode);
     }
 
+    private void launchBatteryFullyChargedSoundPicker(int requestCode, String toneUriString) {
+        final Intent intent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
+
+        intent.putExtra(RingtoneManager.EXTRA_RINGTONE_TITLE,
+                getString(R.string.battery_fully_charged_sound_ringtone_title));
+        intent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE,
+                RingtoneManager.TYPE_NOTIFICATION);
+        intent.putExtra(RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI,
+                Settings.System.DEFAULT_NOTIFICATION_URI);
+        if (toneUriString != null && !toneUriString.equals(RINGTONE_SILENT_URI_STRING)) {
+            Uri uri = Uri.parse(toneUriString);
+            if (uri != null) {
+                intent.putExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI, uri);
+            }
+        }
+        startActivityForResult(intent, requestCode);
+    }
+
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
@@ -131,6 +195,10 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 && resultCode == Activity.RESULT_OK) {
             Uri uri = data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI);
             updateChargingRingtone(uri != null ? uri.toString() : null, true);
+        } else if (requestCode == REQUEST_CODE_BATTERY_FULLY_CHARGED_RINGTONE
+                && resultCode == Activity.RESULT_OK) {
+            Uri uri = data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI);
+            updateBatteryFullyChargedRingtone(uri != null ? uri.toString() : null, true);
         }
     }
 }
