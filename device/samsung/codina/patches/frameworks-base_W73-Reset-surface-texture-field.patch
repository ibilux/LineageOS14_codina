Subject: [PATCH] Reset surface_texture field to avoid crash in JNI MediaPlayer

When invoke setVideoSurface in JNI MediaPlayer, it will decrease
reference of old surface texture, and then set new surface_texture
field after get new surface. But new surface_texture field will never
set if surface already being released or surface texture binding
failed. When next time setVideoSurface invoked and try to get video
surface texture, it will cause crash for accessing illegal address.

Reset surface_texture field when surface fails to bind surface
texture or surface has already been released.

diff --git a/media/jni/android_media_MediaPlayer.cpp b/media/jni/android_media_MediaPlayer.cpp
index 2fb1a3b..f4e4da3 100644
--- a/media/jni/android_media_MediaPlayer.cpp
+++ b/media/jni/android_media_MediaPlayer.cpp
@@ -464,12 +464,14 @@
         if (surface != NULL) {
             new_st = surface->getIGraphicBufferProducer();
             if (new_st == NULL) {
+                env->SetLongField(thiz, fields.surface_texture, 0);
                 jniThrowException(env, "java/lang/IllegalArgumentException",
                     "The surface does not have a binding SurfaceTexture!");
                 return;
             }
             new_st->incStrong((void*)decVideoSurfaceRef);
         } else {
+            env->SetLongField(thiz, fields.surface_texture, 0);
             jniThrowException(env, "java/lang/IllegalArgumentException",
                     "The surface has been released");
             return;
